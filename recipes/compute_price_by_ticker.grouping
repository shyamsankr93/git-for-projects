{
  "preFilter": {
    "distinct": false,
    "enabled": false
  },
  "keys": [
    {
      "countDistinct": false,
      "min": false,
      "avg": false,
      "last": false,
      "max": false,
      "column": "ticker",
      "count": false,
      "sum": false,
      "concat": false,
      "type": "string",
      "stddev": false,
      "first": false
    }
  ],
  "values": [
    {
      "last": false,
      "max": false,
      "firstLastNotNull": false,
      "column": "date",
      "count": false,
      "$idx": 0,
      "sum": false,
      "concat": false,
      "type": "date",
      "concatDistinct": false,
      "sum2": false,
      "min": false,
      "countDistinct": false,
      "avg": false,
      "stddev": false,
      "first": false
    },
    {
      "last": false,
      "max": false,
      "firstLastNotNull": false,
      "column": "log_price_lag_diff",
      "count": false,
      "$idx": 1,
      "sum": false,
      "concat": false,
      "type": "double",
      "concatDistinct": false,
      "sum2": false,
      "min": false,
      "countDistinct": false,
      "avg": false,
      "$selected": false,
      "stddev": false,
      "first": false
    }
  ],
  "globalCount": true,
  "engineParams": {
    "hive": {
      "skipPrerunValidate": false,
      "hiveconf": [],
      "inheritConf": "default",
      "addDkuUdf": false,
      "executionEngine": "HIVESERVER2"
    },
    "sqlPipelineParams": {
      "pipelineAllowMerge": true,
      "pipelineAllowStart": true
    },
    "impala": {
      "forceStreamMode": true
    },
    "lowerCaseSchemaIfEngineRequiresIt": true,
    "sparkSQL": {
      "skipPrerunValidate": false,
      "pipelineAllowMerge": true,
      "useGlobalMetastore": false,
      "pipelineAllowStart": true,
      "readParams": {
        "mode": "AUTO",
        "autoModeRepartitionInto": 10,
        "map": {}
      },
      "overwriteOutputSchema": false,
      "executionEngine": "SPARK_SUBMIT",
      "sparkConfig": {
        "inheritConf": "default",
        "conf": []
      }
    }
  },
  "enlargeYourBits": true,
  "outputColumnNameOverrides": {},
  "computedColumns": [],
  "postFilter": {
    "uiData": {
      "mode": "CUSTOM",
      "conditions": [
        {
          "input": "ticker",
          "col": "count",
          "num": 0,
          "operator": "contains"
        }
      ]
    },
    "expression": "numval(\u0027count\u0027) \u003e variables[\"min_number_rows\"]",
    "$status": {
      "schema": {
        "columns": [
          {
            "name": "ticker",
            "type": "string"
          },
          {
            "name": "count",
            "type": "bigint"
          }
        ],
        "userModified": false
      },
      "validated": true,
      "fullyTranslated": true,
      "ok": true,
      "message": "Column \"varia\" doesn\u0027t exist. ",
      "sql": "\"count\" \u003e 100.0"
    },
    "distinct": false,
    "enabled": true
  }
}